function [CurrentA, BiasV, Output3V, Input2V, Input3V, LIDemod1XA, LIDemod1YA, VbgV] = importcompressibility(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [CURRENTA, BIASV, OUTPUT3V, INPUT2V, INPUT3V, LIDEMOD1XA, LIDEMOD1YA,
%  VBGV] = IMPORTFILE(FILENAME) reads data from text file FILENAME for
%  the default selection.  Returns the data as column vectors.
%
%  [CURRENTA, BIASV, OUTPUT3V, INPUT2V, INPUT3V, LIDEMOD1XA, LIDEMOD1YA,
%  VBGV] = IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  [CurrentA, BiasV, Output3V, Input2V, Input3V, LIDemod1XA, LIDemod1YA, VbgV] = importfile("C:\Users\STM\Desktop\Stanford University\090419 tip 04\Compressibility test10-3-20199-46 PM00001.dat", [7, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 03-Oct-2019 21:55:58

%% Input handling
fid = fopen(filename);
i = 1;
while(~strcmp(fgetl(fid),'[DATA]'))
    i = i+1;
end
i = i + 2;
fclose(fid);

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [i, Inf];
end


%% Setup the Import Options
opts = delimitedTextImportOptions("NumVariables", 8);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["CurrentA", "BiasV", "Output3V", "Input2V", "Input3V", "LIDemod1XA", "LIDemod1YA", "VbgV"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double"];
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
CurrentA = tbl.CurrentA;
BiasV = tbl.BiasV;
Output3V = tbl.Output3V;
Input2V = tbl.Input2V;
Input3V = tbl.Input3V;
LIDemod1XA = tbl.LIDemod1XA;
LIDemod1YA = tbl.LIDemod1YA;
VbgV = tbl.VbgV;
end